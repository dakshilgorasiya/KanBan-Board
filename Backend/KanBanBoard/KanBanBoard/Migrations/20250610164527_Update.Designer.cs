// <auto-generated />
using System;
using KanBanBoard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KanBanBoard.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250610164527_Update")]
    partial class Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KanBanBoard.Model.CategoriesModel", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KanBanBoard.Model.TaskModel", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<int>("AssignTo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskId");

                    b.HasIndex("AssignTo");

                    b.HasIndex("CurrentCategoryId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("KanBanBoard.Model.TasklogModel", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int?>("FromCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovedBy")
                        .HasColumnType("int");

                    b.Property<int>("TaskID")
                        .HasColumnType("int");

                    b.Property<int?>("ToCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.HasIndex("FromCategoryId");

                    b.HasIndex("MovedBy");

                    b.HasIndex("TaskID");

                    b.HasIndex("ToCategoryId");

                    b.ToTable("Tasklog");
                });

            modelBuilder.Entity("KanBanBoard.Model.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KanBanBoard.Model.TaskModel", b =>
                {
                    b.HasOne("KanBanBoard.Model.UserModel", "AssignedUser")
                        .WithMany("AssignedTasks")
                        .HasForeignKey("AssignTo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanBanBoard.Model.CategoriesModel", "CurrentCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("CurrentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("CurrentCategory");
                });

            modelBuilder.Entity("KanBanBoard.Model.TasklogModel", b =>
                {
                    b.HasOne("KanBanBoard.Model.CategoriesModel", "FromCategory")
                        .WithMany("FromLogs")
                        .HasForeignKey("FromCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KanBanBoard.Model.UserModel", "User")
                        .WithMany("MovedLogs")
                        .HasForeignKey("MovedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanBanBoard.Model.TaskModel", "Task")
                        .WithMany("TaskLogs")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanBanBoard.Model.CategoriesModel", "ToCategory")
                        .WithMany("ToLogs")
                        .HasForeignKey("ToCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FromCategory");

                    b.Navigation("Task");

                    b.Navigation("ToCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KanBanBoard.Model.CategoriesModel", b =>
                {
                    b.Navigation("FromLogs");

                    b.Navigation("Tasks");

                    b.Navigation("ToLogs");
                });

            modelBuilder.Entity("KanBanBoard.Model.TaskModel", b =>
                {
                    b.Navigation("TaskLogs");
                });

            modelBuilder.Entity("KanBanBoard.Model.UserModel", b =>
                {
                    b.Navigation("AssignedTasks");

                    b.Navigation("MovedLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
